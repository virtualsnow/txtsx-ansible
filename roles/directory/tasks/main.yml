---
# Hosts toplevel / directory listing, statically generated via Jinja2.

- name: Make sure dependencies are installed.
  package:
    name:
      - python3
      - python3-pip
      - git
    state: latest
  become: yes

- name: Install Python libraries via pip.
  pip:
    name:
      - Jinja2
      - Flask

# TODO: only accept signed commits. (verify_commit)
- name: Fetch txt directory templates via git.
  git:
    repo: "{{ git_url }}"
    dest: "{{ local_git_dir }}"
    force: yes

- name: Compile static directory pages via script.
  command: "{{ local_git_dir }}/build-static.py"
  args:
    chdir: "{{ local_git_dir }}"
    #    creates: /path/to/database

- name: Transfer nginx_directory dockerfile.
  copy:
    src: Dockerfile
    dest: "{{ local_git_dir }}/Dockerfile"


- name: Transfer nginx_directory custom configuration.
  copy:
    src: nginx.conf
    dest: "{{ local_git_dir }}/nginx.conf"


- name: "Build nginx_directory docker image"
  docker_image:
    name: nginx_directory
    build:
      path: "{{ local_git_dir }}"
      pull: yes
    source: build
    #Unfortunately, if it is not forced, it fails to update on changes.
    #Caching alpine-nginx may be useful.
    force_source: yes

- name: "Start/restart nginx_directory container.  Expose container port 80 to 8081 on localhost."
  docker_container:
    name: nginx_directory
    image: nginx_directory
    state: started
    restart: yes
    published_ports: 127.0.0.1:9090:80


- name: "Check if running Haproxy."
  stat: 
    path: /etc/haproxy/haproxy.cfg
  register: running_haproxy


- name: "Let haproxy know about this backend, if haproxy is available"
  lineinfile:
    path: /etc/haproxy/active_urls.txt
    line: "txt.sx"
    create: yes
  become: yes
  when: running_haproxy is succeeded

